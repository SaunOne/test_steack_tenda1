generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model Pegawai {
  pegawai_id Int     @id @default(autoincrement())
  name       String  @db.Text
  username   String  @unique @db.VarChar(255) // Ganti TEXT dengan VARCHAR
  password   String  @db.Text
  role_id    Int
  deletedAt  DateTime? @db.DateTime

  role Role @relation(fields: [role_id], references: [role_id])
}



model Role {
  role_id   Int      @id @default(autoincrement())
  name      String   @db.Text
  deletedAt DateTime? @db.DateTime

  pegawai Pegawai[]
}

model Pelanggan {
  pelanggan_id   Int          @id @default(autoincrement())
  name           String       @db.Text
  points         Int
  deletedAt      DateTime?    @db.DateTime

  level_member_id Int?        // Foreign key ke LevelMember (nullable)
  levelMember     LevelMember? @relation(fields: [level_member_id], references: [level_member_id])

  transaksi       Transaksi[]
}

model Menu {
  menu_id         Int               @id @default(autoincrement()) // Primary Key
  name            String            @db.Text                    // Name of the menu, stored as TEXT in the database
  description     String            @db.Text                    // Description, stored as TEXT
  stok            Int               @db.Int                     // Stock quantity as an integer
  price           Float             @db.Double                  // Price stored as DOUBLE
  deletedAt       DateTime?         @db.DateTime                // Nullable field for soft deletes
  detail_transaksi DetailTransaksi[]                            // Relation to DetailTransaksi
}


model LevelMember {
  level_member_id Int          @id @default(autoincrement())
  name            String       @db.Text
  diskon          Int
  minimum_point   Int
  deletedAt       DateTime?    @db.DateTime

  pelanggan       Pelanggan[]  // Relasi ke Pelanggan (one-to-many)
}

model Transaksi {
  transaksi_id      Int           @id @default(autoincrement())
  pelanggan_id      Int
  diskon            Float?
  tanggal_transaksi DateTime      @db.DateTime
  total_diskon      Int           @default(0)
  total_harga       Float
  deletedAt         DateTime?     @db.DateTime

  pelanggan Pelanggan  @relation(fields: [pelanggan_id], references: [pelanggan_id])
  detail_transaksi DetailTransaksi[]
}

model DetailTransaksi {
  detail_transaksi_id Int @id @default(autoincrement())
  transaksi_id        Int
  menu_id             Int
  amount              Int

  transaksi Transaksi @relation(fields: [transaksi_id], references: [transaksi_id])
  menu      Menu      @relation(fields: [menu_id], references: [menu_id])
}
